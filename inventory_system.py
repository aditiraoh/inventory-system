# -*- coding: utf-8 -*-
"""inventory_system.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gSCcNHess2tVf11Ge0CncIxGiFnHSig6
"""



class Item:
    def __init__(self, name, description, price):
        self.name = name
        self.description = description
        self.price = price
class Inventory:
    def __init__(self):
        self.items = {}

    def add_item(self, item, quantity):
        if item.name in self.items:
            existing_types = [existing_item["item"].description for existing_item in self.items[item.name]]
            if item.description in existing_types:
                for existing_item in self.items[item.name]:
                    if existing_item["item"].description == item.description:
                        existing_item["quantity"] += quantity
            else:
                self.items[item.name].append({"item": item, "quantity": quantity})
        else:
            self.items[item.name] = [{"item": item, "quantity": quantity}]
        print(f"Added {quantity} {item.description} {item.name}(s) of cost {item.price} to the inventory.")


    def remove_item(self, item_name, description, quantity):
        if item_name in self.items:
            matching_items = [item_data for item_data in self.items[item_name] if item_data["item"].description == description]
            if matching_items:
                item_data = matching_items[0]
                if quantity >= item_data["quantity"]:
                    self.items[item_name].remove(item_data)
                    print(f"Removed {item_name} with description '{description}' from the inventory.")
                else:
                    item_data["quantity"] -= quantity
                    print(f"Removed {quantity} {item_name}(s) with description '{description}' from the inventory.")
            else:
                print(f"{item_name} with description '{description}' not found in the inventory.")
        else:
            print(f"{item_name} not found in the inventory.")


    def show_inventory(self):
        print("Inventory:")
        for item_name, item_data_list in self.items.items():
            print(f"- {item_name}:")
            for item_data in item_data_list:
                item = item_data["item"]
                quantity = item_data["quantity"]
                description = item.description
                print(f"  - {description} ({quantity} units)")

    def search_item(self, query):
        matching_items = []
        for item_name, item_data_list in self.items.items():
            for item_data in item_data_list:
                if query.lower() in item_name.lower() or query.lower() in item_data["item"].description.lower():
                    matching_items.append((item_data["item"].description, item_data["quantity"]))
        return matching_items

    def sort_inventory(self):
        sorted_items = sorted(self.items.items(), key=lambda x: x[0])
        self.items = dict(sorted_items)

    def calculate_total_cost(self):
        total_cost = 0
        for item_data_list in self.items.values():
            for item_data in item_data_list:
                quantity = item_data["quantity"]
                total_cost += item.price * quantity
        return total_cost

if __name__ == "__main__":
    my_inventory = Inventory()

    print("INVENTORY SYSTEM")

    while True:
        print("\nOptions:")
        print("1. Add item")
        print("2. Remove item")
        print("3. Show inventory")
        print("4. Search item")
        print("5. Sort inventory")
        print("6. Find total cost ")
        print("7. Exit")
        choice = input("Enter your choice: ")

        if choice == "1":
            item_name = input("Enter item name: ")
            description = input("Enter item description: ")
            price = float(input("Enter item price: "))
            item = Item(item_name, description, price)
            quantity = int(input("Enter quantity: "))
            my_inventory.add_item(item, quantity)
        elif choice == "2":
            item_name = input("Enter item name: ")
            description = input("Enter item description: ")
            quantity = int(input("Enter quantity: "))
            my_inventory.remove_item(item_name, description, quantity)
        elif choice == "3":
            my_inventory.show_inventory()
        elif choice == "4":
             query = input("Enter search query: ")
             matching_items = my_inventory.search_item(query)
             if matching_items:
                print("Matching items:")
                for item_name in matching_items:
                    print(f"- {item_name}")
             else:
                print("No matching items found.")
        elif choice == "5":
            my_inventory.sort_inventory()
            print("Inventory sorted.")
        elif choice == "6":
            total_cost = my_inventory.calculate_total_cost()
            print(f"Total cost of inventory: {total_cost} /-")
        elif choice == "7":
            print("Exiting the inventory system.")
            break
        else:
            print("Invalid choice. Please choose a valid option.")